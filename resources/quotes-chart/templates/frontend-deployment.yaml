kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
      argocd.argoproj.io/sync-wave: "6"
      console.alpha.openshift.io/overview-app-route: ‘true’
  labels:
    app: {{ .Values.frontend.name }}
    app.kubernetes.io/part-of: quotes-demo
    app.kubernetes.io/name: {{ .Values.frontend.name }}
    app.kubernetes.io/component: frontend
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: quotes-aws-dev
    app.kubernetes.io/environment: development
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "{{ .Values.runtime.frontend.version }}"
  name: {{ .Values.frontend.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
        app: {{ .Values.frontend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.name }}
    spec:
      containers:
        - name: {{ .Values.frontend.name }}
          image: "{{ .Values.image.frontend.repository }}:{{ .Values.image.frontend.tag | default .Chart.AppVersion }}"
          env:
            - name: {{ .Values.configmap.environmentVariables.variable }}
              valueFrom:
                configMapKeyRef:
                  name: environment-variables
                  key: {{ .Values.configmap.environmentVariables.variable }}
                  configmap:
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600