apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  name: quotes-backend-build
  namespace: quotes-backend-dev
  labels:
    type: pipeline
spec:
  params:
    - default: 'https://github.com/Everything-is-Code/quotes-backend.git'
      description: source repo that contains the application code
      name: source-repo
      type: string
    - default: main
      description: source branch to build from
      name: source-branch
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/quotes-backend-dev/quotes-backend'
      description: reference of the image that will get created
      name: output-image
      type: string
    - name: sonarqube-host-url
      type: string
    - name: sonarqube-project-key
      type: string
    - name: sonarqube-project-secret
      type: string
    - name: cyclonedx-host-url
      type: string
    - name: stackrox-endpoint
      type: string
    - name: stackrox-secret
      type: string
    - name: git-host
      type: string
    - name: git-owner
      type: string
    - name: component-id
      type: string
    - name: common-password-secret
      type: string
    - name: rekor-url
      type: string
    - name: tuf-mirror
      type: string
    - name: certificate-identity
      type: string
    - name: oidc-issuer
      type: string
  results:
    - description: ''
      name: IMAGE_URL
      value: $(tasks.build-sign-image.results.IMAGE_URL)
    - description: ''
      name: IMAGE_DIGEST
      value: $(tasks.build-sign-image.results.IMAGE_DIGEST)
    - description: ''
      name: CHAINS-GIT_URL
      value: $(tasks.git-clone.results.url)
    - description: ''
      name: CHAINS-GIT_COMMIT
      value: $(tasks.git-clone.results.commit)
    - description: ''
      name: ACS_SCAN_OUTPUT
      value: $(tasks.acs-image-scan.results.SCAN_OUTPUT)
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.source-repo)
        - name: revision
          value: $(params.source-branch)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: source-folder
    - name: package
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: source-folder
        - name: maven-settings
          workspace: maven-settings
    - name: scan-source
      params:
        - name: sonarqubeHostUrl
          value: $(params.sonarqube-host-url)
        - name: sonarqubeProjectKey
          value: $(params.sonarqube-project-key)
        - name: sonarqubeProjectSecret
          value: $(params.sonarqube-project-secret)
      runAfter:
        - package
      taskRef:
        kind: Task
        name: scan-code
      workspaces:
        - name: repository
          workspace: source-folder
    - name: build-sign-image
      params:
        - name: IMAGE
          value: $(params.output-image)
      runAfter:
        - scan-source
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: source-folder
    - name: acs-image-check
      params:
        - name: rox_central_endpoint
          value: $(params.stackrox-endpoint)
        - name: rox_api_token
          value: $(params.stackrox-secret)
        - name: image
          value:  
        - name: insecure-skip-tls-verify
          value: 'true'
        - name: image_digest
          value: $(tasks.build-sign-image.results.IMAGE_DIGEST)
      runAfter:
        - build-sign-image
      taskRef:
        kind: Task
        name: acs-image-check
      workspaces:
        - name: reports
          workspace: reports
    - name: acs-image-scan
      params:
        - name: rox_central_endpoint
          value: $(params.stackrox-endpoint)
        - name: rox_api_token
          value: $(params.stackrox-secret)
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/quotes-backend-dev/quotes-backend
        - name: insecure-skip-tls-verify
          value: 'true'
        - name: image_digest
          value: $(tasks.build-sign-image.results.IMAGE_DIGEST)
      runAfter:
        - build-sign-image
      taskRef:
        kind: Task
        name: acs-image-scan
      workspaces:
        - name: reports
          workspace: reports
    - name: acs-deploy-check
      params:
        - name: rox_central_endpoint
          value: $(params.stackrox-endpoint)
        - name: rox_api_token
          value: $(params.stackrox-secret)
        - name: git_host
          value: $(params.git-host)
        - name: git_owner
          value: $(params.git-owner)
        - name: component_id
          value: $(params.component-id)
        - name: common_password_secret
          value: $(params.common-password-secret)
        - name: insecure-skip-tls-verify
          value: 'true'
      runAfter:
        - build-sign-image
      taskRef:
        kind: Task
        name: acs-deploy-check
      workspaces:
        - name: reports
          workspace: reports
    - name: scan-export-sbom
      params:
        - name: cyclonedxHostUrl
          value: $(params.cyclonedx-host-url)
        - name: image
          value: image-registry.openshift-image-registry.svc:5000/quotes-backend-dev/quotes-backend@$(tasks.build-sign-image.results.IMAGE_DIGEST)
      runAfter:
        - acs-image-check
        - acs-image-scan
        - acs-deploy-check
      taskRef:
        kind: Task
        name: scan-export-sbom
      workspaces:
        - name: repository
          workspace: source-folder
    - name: query-rekor-signed-provenance
      params:
        - name: imageDigest
          value: $(tasks.build-sign-image.results.IMAGE_DIGEST)
        - name: rekorUrl
          value: $(params.rekor-url)
      runAfter:
        - acs-image-check
        - acs-image-scan
        - acs-deploy-check
      taskRef:
        kind: Task
        name: rekor-signed-provenance
    - name: resync
      params:
        - name: COMPONENT_ID
          value: $(params.component-id)
      runAfter:
        - scan-export-sbom
        - query-rekor-signed-provenance
      taskRef:
        kind: Task
        name: resync
  workspaces:
    - name: source-folder
    - name: maven-settings
    - name: docker-config
    - name: reports
